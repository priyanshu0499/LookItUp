{"ast":null,"code":"var _jsxFileName = \"F:\\\\Senior Certificate\\\\SE\\\\Test\\\\LookItUp\\\\newcomponent_scanner\\\\scannerfrontend\\\\src\\\\components\\\\scannerUploadForm\\\\ScannerUploadForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './ScannerUploadForm.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileImage, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ScannerUploadForm(props) {\n  _s();\n\n  const [file, setFile] = useState(undefined);\n  const [newSelection, setNewSelection] = useState(false);\n  const [error, setError] = useState(undefined);\n  const [data, setData] = useState(undefined);\n  useEffect(() => {\n    if (data !== undefined) {\n      props.getData(data);\n      console.log(data);\n    }\n  }, [data]);\n\n  const selectFile = e => {\n    console.log(\"in select file\");\n    setFile(undefined);\n    setError(undefined);\n    const validImage = validateImage(e.target.files[0]);\n\n    if (validImage) {\n      setFile(e.target.files[0]);\n    } else {\n      setError('Invalid File');\n    }\n  };\n\n  const validateImage = file => {\n    const allowedTypes = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png'];\n\n    if (allowedTypes.includes(file.type)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const submit = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    console.log(file.type.split('/')[1]);\n    formData.append('type', file.type.split('/')[1]);\n    const response = await fetch(`http://127.0.0.1:8080/scanner`, {\n      method: 'POST',\n      body: formData\n    });\n\n    if (response.status === 200) {\n      const dataObject = await response.json();\n      setData(dataObject);\n    } else {\n      const dataObject = await response.json();\n      setError(dataObject.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-scanner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-scanner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-heading\",\n        children: \"Custom File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-select-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `imgUpload ${file !== undefined ? 'animate-on-file-select-out' : 'animate-on-file-select-in'}`,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faFileImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 129\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `imgUpload  ${file !== undefined ? 'animate-tick' : 'animate-tick-out'}`,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 107\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `filename ${file !== undefined ? '' : 'invisible'}`,\n          children: file !== undefined ? file.name : 'ghost letters'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-file-error\",\n          children: error !== undefined ? `* ${error}` : 'Only pics allowed! (jpg, jpeg, gif, png)'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image-input\",\n            className: \"btn-select\",\n            children: \"Select file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image-input\",\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => selectFile(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-btn\",\n        onClick: submit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ScannerUploadForm, \"GfJe9IV+QBuAvnFhn6J1DygfqiM=\");\n\n_c = ScannerUploadForm;\nexport default ScannerUploadForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScannerUploadForm\");","map":{"version":3,"sources":["F:/Senior Certificate/SE/Test/LookItUp/newcomponent_scanner/scannerfrontend/src/components/scannerUploadForm/ScannerUploadForm.jsx"],"names":["React","useEffect","useState","FontAwesomeIcon","faFileImage","faCheck","ScannerUploadForm","props","file","setFile","undefined","newSelection","setNewSelection","error","setError","data","setData","getData","console","log","selectFile","e","validImage","validateImage","target","files","allowedTypes","includes","type","submit","formData","FormData","append","split","response","fetch","method","body","status","dataObject","json","message","name","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ScannerUploadForm.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileImage, faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction ScannerUploadForm(props) {\r\n    const [file, setFile] = useState(undefined);\r\n    const [newSelection, setNewSelection] = useState(false);\r\n    const [error, setError] = useState(undefined);\r\n    const [data, setData] = useState(undefined);\r\n\r\n\r\n    useEffect(() => {\r\n        if (data !== undefined) {\r\n            props.getData(data); \r\n            console.log(data)\r\n        }\r\n    }, [data])\r\n    \r\n\r\n    const selectFile = (e) => {\r\n        console.log(\"in select file\");\r\n        setFile(undefined);\r\n        setError(undefined);\r\n        const validImage = validateImage(e.target.files[0]);\r\n        if (validImage) {\r\n            setFile(e.target.files[0]);\r\n        } else {\r\n            setError('Invalid File');\r\n        }\r\n    }\r\n\r\n    const validateImage = (file) => {\r\n        const allowedTypes = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png'];\r\n        if (allowedTypes.includes(file.type)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const submit = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        console.log(file.type.split('/')[1]);\r\n        formData.append('type', file.type.split('/')[1]);\r\n            const response = await fetch(`http://127.0.0.1:8080/scanner`, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            if (response.status === 200) {\r\n                const dataObject = await response.json();\r\n                setData(dataObject);\r\n            } else {\r\n                const dataObject = await response.json();\r\n                setError(dataObject.message)\r\n            }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='container-scanner'>\r\n            <div className='wrapper-scanner'>\r\n                <div className='scanner-heading'>\r\n                    Custom File Upload\r\n                </div>\r\n                <div className='image-select-section'>\r\n                    {/* image */}\r\n                    <div className={`imgUpload ${file!==undefined? 'animate-on-file-select-out': 'animate-on-file-select-in'}`}><FontAwesomeIcon icon={faFileImage}  /></div>\r\n                    <div className={`imgUpload  ${file!==undefined? 'animate-tick': 'animate-tick-out'}`}><FontAwesomeIcon icon={faCheck}  /></div>\r\n                    {/* name of image */}\r\n                    <div className={`filename ${file!==undefined? '': 'invisible'}`}>{file!==undefined? file.name: 'ghost letters'}</div>\r\n                    <div className='invalid-file-error'>{error!==undefined? `* ${error}`: 'Only pics allowed! (jpg, jpeg, gif, png)'}</div>\r\n                    {/* choose file btn */}\r\n                    <div className='image-input'>\r\n                        <label htmlFor=\"image-input\" className='btn-select'>Select file</label>\r\n                        <input id='image-input' type=\"file\" style={{display: 'none'}} onChange={(e) => selectFile(e)} />\r\n                    </div>\r\n                </div>\r\n                <div className='submit-btn' onClick={submit}>\r\n                    Submit\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScannerUploadForm"]},"metadata":{},"sourceType":"module"}