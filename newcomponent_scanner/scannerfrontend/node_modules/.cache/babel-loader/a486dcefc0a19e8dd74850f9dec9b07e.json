{"ast":null,"code":"var _jsxFileName = \"F:\\\\Senior Certificate\\\\SE\\\\Test\\\\LookItUp\\\\newcomponent_scanner\\\\scannerfrontend\\\\src\\\\components\\\\chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Chart.css';\nimport { ResponsiveContainer, PieChart, Pie, Legend, Cell, Tooltip } from 'recharts';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(props) {\n  _s();\n\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    if (props.data !== undefined) {\n      console.log(props.data);\n      let d = Object.entries(props.data).map(_ref => {\n        let [key, value] = _ref;\n        return {\n          name: key,\n          value: value,\n          color: key === 'Poor' ? '#EDAD9D' : key === \"Average\" ? '#FF5902' : key === 'Best' ? '#94D879' : key === \"Good\" ? '#73CDB2' : key === 'NA' ? 'rgb(156, 134, 255)' : null\n        };\n      });\n      console.log(d);\n      setChartData(d);\n    }\n  }, [props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-wrapper-dark\",\n      onClick: props.closePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cross-close\",\n          style: {\n            visibility: 'hidden'\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup-heading\",\n          children: \"Pie Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cross-close\",\n          onClick: props.closePopup,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ingredient-heading\",\n        children: \"Ingredient Composition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"piechart-section\",\n        children: [chartData.length > 0 ? /*#__PURE__*/_jsxDEV(PieChart, {\n          width: 300,\n          height: 300,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            contentStyle: {\n              backgroundColor: 'white',\n              borderRadius: '5px',\n              color: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Pie, {\n            data: chartData,\n            dataKey: \"value\",\n            dataName: \"name\",\n            cx: \"50%\",\n            cy: \"50%\",\n            outerRadius: 100,\n            label: true,\n            children: chartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n              fill: entry.color\n            }, `cell-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-dot bg-average\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-text color-average\",\n              children: \"Average\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-dot bg-best\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-text color-best\",\n              children: \"Best\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-dot bg-good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-text color-good\",\n              children: \"Good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-dot bg-na\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-text color-na\",\n              children: \"NA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-dot bg-poor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-text color-poor\",\n              children: \"Poor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close-btn\",\n          onClick: props.closePopup,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["F:/Senior Certificate/SE/Test/LookItUp/newcomponent_scanner/scannerfrontend/src/components/chart/Chart.jsx"],"names":["React","useEffect","useState","ResponsiveContainer","PieChart","Pie","Legend","Cell","Tooltip","FontAwesomeIcon","faTimes","Chart","props","chartData","setChartData","data","undefined","console","log","d","Object","entries","map","key","value","name","color","closePopup","visibility","length","backgroundColor","borderRadius","entry","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Chart.css';\r\nimport { ResponsiveContainer, PieChart, Pie, Legend, Cell, Tooltip } from 'recharts';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nfunction Chart(props) {\r\n    const [chartData, setChartData] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.data !== undefined) {\r\n            console.log(props.data);\r\n            let d = Object.entries(props.data).map(([key, value]) => {\r\n                return {\r\n                    name: key,\r\n                    value: value,\r\n                    color: key === 'Poor' ? '#EDAD9D' : key === \"Average\" ? '#FF5902' : key === 'Best' ? '#94D879' : key === \"Good\" ? '#73CDB2' : key === 'NA' ? 'rgb(156, 134, 255)' : null\r\n                }\r\n            })\r\n            console.log(d);\r\n            setChartData(d);\r\n        }\r\n    }, [props.data])\r\n\r\n    return (\r\n        <div className='popup-wrapper'>\r\n            <div className='popup-wrapper-dark' onClick={props.closePopup} ></div>\r\n            <div className='popup-container'>\r\n                <div className='popup-header'>\r\n                    <div className='cross-close' style={{ visibility: 'hidden' }}><FontAwesomeIcon icon={faTimes} /></div>\r\n                    <div className='popup-heading'>\r\n                        Pie Chart\r\n                    </div>\r\n                    <div className='cross-close' onClick={props.closePopup}><FontAwesomeIcon icon={faTimes} /></div>\r\n                </div>\r\n                <div className='ingredient-heading'>\r\n                    Ingredient Composition\r\n                </div>\r\n                <div className='piechart-section'>\r\n                    {chartData.length > 0 ?\r\n                        <PieChart width={300} height={300} >\r\n                            {/* <Legend /> */}\r\n                            <Tooltip contentStyle={{ backgroundColor: 'white', borderRadius: '5px', color: 'white' }} />\r\n                            <Pie data={chartData} dataKey=\"value\" dataName=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} label >\r\n                                {\r\n                                    chartData.map((entry, index) => (\r\n                                        <Cell key={`cell-${index}`} fill={entry.color} />\r\n                                    ))\r\n                                }\r\n                            </Pie>\r\n                        </PieChart>\r\n                        : null}\r\n                    <ul className='legend'>\r\n                        <li>\r\n                            <div className='legend-dot bg-average'></div>\r\n                            <div className='legend-text color-average'>\r\n                                Average\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className='legend-dot bg-best'></div>\r\n                            <div className='legend-text color-best'>\r\n                                Best\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className='legend-dot bg-good'></div>\r\n                            <div className='legend-text color-good'>\r\n                                Good\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className='legend-dot bg-na'></div>\r\n                            <div className='legend-text color-na'>\r\n                                NA\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className='legend-dot bg-poor'></div>\r\n                            <div className='legend-text color-poor'>\r\n                                Poor\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='close-section'>\r\n                    <div className='close-btn' onClick={props.closePopup}>Close</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart"]},"metadata":{},"sourceType":"module"}