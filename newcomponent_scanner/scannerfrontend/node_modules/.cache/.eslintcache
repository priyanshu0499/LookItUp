[{"C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\index.js":"1","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\App.js":"2","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\reportWebVitals.js":"3","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\footer\\Footer.jsx":"4","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\header\\Header.jsx":"5","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\scannerUploadForm\\ScannerUploadForm.jsx":"6","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\scannerTable\\ScannerTable.jsx":"7","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\chart\\Chart.jsx":"8","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\about\\About.jsx":"9"},{"size":517,"mtime":1648846986092,"results":"10","hashOfConfig":"11"},{"size":1143,"mtime":1648860294066,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1648846986092,"results":"13","hashOfConfig":"11"},{"size":573,"mtime":1648859693070,"results":"14","hashOfConfig":"11"},{"size":862,"mtime":1648859910519,"results":"15","hashOfConfig":"11"},{"size":3446,"mtime":1648846986092,"results":"16","hashOfConfig":"11"},{"size":2948,"mtime":1648846986092,"results":"17","hashOfConfig":"11"},{"size":4249,"mtime":1648846986092,"results":"18","hashOfConfig":"11"},{"size":140,"mtime":1648857475008,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"18ea9vv",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\index.js",[],[],["50","51"],"C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\App.js",["52"],[],"C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\reportWebVitals.js",[],[],"C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\footer\\Footer.jsx",[],[],"C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\header\\Header.jsx",["53","54","55","56"],[],"C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\scannerUploadForm\\ScannerUploadForm.jsx",["57","58","59"],[],"import React, { useEffect, useState } from 'react';\r\nimport './ScannerUploadForm.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileImage, faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction ScannerUploadForm(props) {\r\n    const [file, setFile] = useState(undefined);\r\n    const [newSelection, setNewSelection] = useState(false);\r\n    const [error, setError] = useState(undefined);\r\n    const [data, setData] = useState(undefined);\r\n\r\n\r\n    useEffect(() => {\r\n        if (data !== undefined) {\r\n            props.getData(data); \r\n            console.log(data)\r\n        }\r\n    }, [data])\r\n    \r\n\r\n    const selectFile = (e) => {\r\n        console.log(\"in select file\");\r\n        setFile(undefined);\r\n        setError(undefined);\r\n        const validImage = validateImage(e.target.files[0]);\r\n        if (validImage) {\r\n            setFile(e.target.files[0]);\r\n        } else {\r\n            setError('Invalid File');\r\n        }\r\n    }\r\n\r\n    const validateImage = (file) => {\r\n        const allowedTypes = ['image/jpg', 'image/jpeg', 'image/gif', 'image/png'];\r\n        if (allowedTypes.includes(file.type)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const submit = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        console.log(file.type.split('/')[1]);\r\n        formData.append('type', file.type.split('/')[1]);\r\n            const response = await fetch(`http://127.0.0.1:8080/scanner`, {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            if (response.status === 200) {\r\n                const dataObject = await response.json();\r\n                setData(dataObject);\r\n            } else {\r\n                const dataObject = await response.json();\r\n                setError(dataObject.message)\r\n            }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='container-scanner'>\r\n            <div className='wrapper-scanner'>\r\n                <div className='scanner-heading'>\r\n                    Custom File Upload\r\n                </div>\r\n                <div className='image-select-section'>\r\n                    {/* image */}\r\n                    <div className={`imgUpload ${file!==undefined? 'animate-on-file-select-out': 'animate-on-file-select-in'}`}><FontAwesomeIcon icon={faFileImage}  /></div>\r\n                    <div className={`imgUpload  ${file!==undefined? 'animate-tick': 'animate-tick-out'}`}><FontAwesomeIcon icon={faCheck}  /></div>\r\n                    {/* name of image */}\r\n                    <div className={`filename ${file!==undefined? '': 'invisible'}`}>{file!==undefined? file.name: 'ghost letters'}</div>\r\n                    <div className='invalid-file-error'>{error!==undefined? `* ${error}`: 'Only pics allowed! (jpg, jpeg, gif, png)'}</div>\r\n                    {/* choose file btn */}\r\n                    <div className='image-input'>\r\n                        <label htmlFor=\"image-input\" className='btn-select'>Select file</label>\r\n                        <input id='image-input' type=\"file\" style={{display: 'none'}} onChange={(e) => selectFile(e)} />\r\n                    </div>\r\n                </div>\r\n                <div className='submit-btn' onClick={submit}>\r\n                    Submit\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScannerUploadForm","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\scannerTable\\ScannerTable.jsx",[],[],"C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\chart\\Chart.jsx",["60","61"],[],"import React, { useEffect, useState } from 'react';\r\nimport './Chart.css';\r\nimport { ResponsiveContainer, PieChart, Pie, Legend, Cell, Tooltip } from 'recharts';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nfunction Chart(props) {\r\n    const [chartData, setChartData] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.data !== undefined) {\r\n            console.log(props.data);\r\n            let d = Object.entries(props.data).map(([key, value]) => {\r\n                return {\r\n                    name: key,\r\n                    value: value,\r\n                    color: key === 'Poor' ? '#EDAD9D' : key === \"Average\" ? '#FF5902' : key === 'Best' ? '#94D879' : key === \"Good\" ? '#73CDB2' : key === 'NA' ? 'rgb(156, 134, 255)' : null\r\n                }\r\n            })\r\n            console.log(d);\r\n            setChartData(d);\r\n        }\r\n    }, [props.data])\r\n\r\n    return (\r\n        <div className='popup-wrapper'>\r\n            <div className='popup-wrapper-dark' onClick={props.closePopup} ></div>\r\n            <div className='popup-container'>\r\n                <div className='popup-header'>\r\n                    <div className='cross-close' style={{ visibility: 'hidden' }}><FontAwesomeIcon icon={faTimes} /></div>\r\n                    <div className='popup-heading'>\r\n                        Pie Chart\r\n                    </div>\r\n                    <div className='cross-close' onClick={props.closePopup}><FontAwesomeIcon icon={faTimes} /></div>\r\n                </div>\r\n                <div className='ingredient-heading'>\r\n                    Ingredient Composition\r\n                </div>\r\n                <div className='piechart-section'>\r\n                    {chartData.length > 0 ?\r\n                        <PieChart width={300} height={300} >\r\n                            {/* <Legend /> */}\r\n                            <Tooltip contentStyle={{ backgroundColor: 'white', borderRadius: '5px', color: 'white' }} />\r\n                            <Pie data={chartData} dataKey=\"value\" dataName=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} label >\r\n                                {\r\n                                    chartData.map((entry, index) => (\r\n                                        <Cell key={`cell-${index}`} fill={entry.color} />\r\n                                    ))\r\n                                }\r\n                            </Pie>\r\n                        </PieChart>\r\n                        : null}\r\n                    <ul className='legend'>\r\n                        <li>\r\n                            <div className='legend-dot bg-average'></div>\r\n                            <div className='legend-text color-average'>\r\n                                Average\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className='legend-dot bg-best'></div>\r\n                            <div className='legend-text color-best'>\r\n                                Best\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className='legend-dot bg-good'></div>\r\n                            <div className='legend-text color-good'>\r\n                                Good\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className='legend-dot bg-na'></div>\r\n                            <div className='legend-text color-na'>\r\n                                NA\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div className='legend-dot bg-poor'></div>\r\n                            <div className='legend-text color-poor'>\r\n                                Poor\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='close-section'>\r\n                    <div className='close-btn' onClick={props.closePopup}>Close</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart","C:\\LookItUp\\newcomponent_scanner\\scannerfrontend\\src\\components\\about\\About.jsx",[],[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":16},{"ruleId":"66","severity":1,"message":"71","line":3,"column":18,"nodeType":"68","messageId":"69","endLine":3,"endColumn":21},{"ruleId":"66","severity":1,"message":"72","line":3,"column":29,"nodeType":"68","messageId":"69","endLine":3,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":20,"column":15,"nodeType":"75","endLine":20,"endColumn":59},{"ruleId":"66","severity":1,"message":"76","line":8,"column":12,"nodeType":"68","messageId":"69","endLine":8,"endColumn":24},{"ruleId":"66","severity":1,"message":"77","line":8,"column":26,"nodeType":"68","messageId":"69","endLine":8,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":18,"column":8,"nodeType":"80","endLine":18,"endColumn":14,"suggestions":"81"},{"ruleId":"66","severity":1,"message":"82","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":29},{"ruleId":"66","severity":1,"message":"83","line":3,"column":46,"nodeType":"68","messageId":"69","endLine":3,"endColumn":52},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'newSelection' is assigned a value but never used.","'setNewSelection' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["86"],"'ResponsiveContainer' is defined but never used.","'Legend' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [data, props]",{"range":"89","text":"90"},[628,634],"[data, props]"]